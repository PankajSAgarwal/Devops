1. Pods deploy single instancees of application such as a web application.
2. Each container is enacapsulated in pods.
3. Multiple such pods are deployed using replication controller or Replicasets.
4. Deployments is a kubernetes object that come higher in the hierarchy
5. The Deployment provide us the capability to upgrade the underlying instances seamlessly using the rolling updates, undo changes and pause and resume changes as required.
6. How do we create Deployment

- Create a deployment definition file
- The deployment definition file is exactly same as Replicaset definition file except the kind is mentioned as Deployment instead of Replicaset

deployment-definition.yml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  labels:
    app: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 3
  template:
    metadata:
      name: nginx-2
      labels:
        app: myapp
    spec:
      containers:
        - name: nginx
          image: nginx

- To create deployment

> kubect create -f deployment-definition.yml

deployment "myapp-deployment" created 

- To get deployment

>kubectl get deployments

Name              DESIRED   CURRENT   UP-TO-DATE  AVAILABLE     AGE
myapp-deployment    3         3         3             3          10s

7. The Deployment automatically creates a ReplicaSet

> kubectl get replicaset

> kubectl get pods

8. Command to describe deployment

>kubectl describe deployment myapp-deployment

9. Command to see all the Kubernetes objects at once

>kubectl get all

This will show Deployment followed by ReplicaSet which are then followed by Pods





    


