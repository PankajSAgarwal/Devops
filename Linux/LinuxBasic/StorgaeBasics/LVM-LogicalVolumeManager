1. LVM allows grouping of multiple physical volumes, which are harddisk or partitions, into a volume group .

2.From this volume group, you can carve out logical volumes

3. Benefits of LVM -

- Allows the logical volume to be resized dynamically as long as there is sufficient space in the volume group.

On Systems such as our laptop, you can have the file Systems such as /home/var/tmp created on top of LVM managed volumes. This allows them to be easily resized when needed 

4. To make use of LVM you need to install package called LVM2
[~]$ apt-get install lvm2

5. The first step in configuring LVM is to identify freed disks or partitions, then create physical volume objects for them. A physical volume object is how LVM identifies a disk or partition. It is also called as PV.

6. To create a PV use pvcreate command.
[~]$ pvcreate /dev/sdb
Physical volume "/dev/sdb" sucessfully created
7. Once PV is created , we can create a Volume Group or VG using vgcreate command.

[~]$ vgcreate caleston_vg /dev/sdb

Volume Group "caleston_vg" sucessfully created

8. A volume group can have one or more physical volume
9. To see the details of the physical volume, run the command pvdisplay
[~]$ pvdisplay

It lists all PV, their names, the size and the volume group it is part of

10. To see more details of the VG , run vgdispaly command

[~]$ vgdispaly

It displays the name of the VG, the total size , which is the size of all physical volumes part of the volume group and the amount of disk space used

11. We can create logical volumes using lvcreate
[~]$ lvcreate -L 1G -n vol1 caleston_vg

In the above example, we are create 1GB volume in the caleston_vg volume group

-L - stands for linear volume which is a common type of logical volume. This option enable us to make use of multiple physical volumes if available in the volume group to create a single logical volume.

12. To see the logical volume, use the lvdisplay command
[~]$ lvdisplay
13. To list the volumes we can also use the lvs command
[~]$ lvs
14. Once the volume is created you can create a file system on it using the mkfs command
[~]$ mkfs.ext4 /dev/caleston_vg/vol1

We pass in the name of the logical volume

15. mount the volume at /mnt/vol1

mount -t ext4 /dev/caleston_vg/vol1 /mnt/vol1

The logical volume is now available for use.
16. Now lets resize the file system on vol1 while it is still mounted.

- To do this first check if there is enough space in VG
- Run the vgs command to list the VGs and their details
[~]$ vgs
- using the lvresize command we can increase the volume by another 1GB

[~]$ lvresize -L +1G -n /dev/caleston_vg/vol1

However if u use df command it will still show capacity of /mnt/vol1 as 1 GB and not 2 GB.

[~]$ df -hP /mnt/vol1

This is because only the logical volume has been resized using lvresize and not the file system we created on it.
To resize the file system on logical volume make use of resize2fs command
[~]$ resize2fs /dev/caleston_vg/vol1

After the above command is executed, the file system in the logical volume is also resized to match the size we specified in the lvcreate command

One key point to note here is that we did not have to stop or unmount the file system while resizing.This can be done on the fly while the file system is in use.

Running the df command now resizes the file system to 2 GB

[~]$ df -hP /mnt/vol1

Logical volumes with LVM are accessible at two places 
/dev/mapper/caleston_vg-vol1 and /dev/caleston_vg/vol1